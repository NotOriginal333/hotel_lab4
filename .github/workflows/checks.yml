name: Checks

on: [ push ]

jobs:
  tests:
    name: Test
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create .env.dev file
        run: |
          echo "DEBUG=${{ secrets.DEBUG }}" > .env.dev
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env.dev
          echo "DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }}" >> .env.dev
          echo "SQL_ENGINE=${{ secrets.SQL_ENGINE }}" >> .env.dev
          echo "SQL_DATABASE=${{ secrets.SQL_DATABASE }}" >> .env.dev
          echo "SQL_USER=${{ secrets.SQL_USER }}" >> .env.dev
          echo "SQL_PASSWORD=${{ secrets.SQL_PASSWORD }}" >> .env.dev
          echo "SQL_HOST=${{ secrets.SQL_HOST }}" >> .env.dev
          echo "SQL_PORT=${{ secrets.SQL_PORT }}" >> .env.dev
          echo "DATABASE=${{ secrets.DATABASE }}" >> .env.dev
          echo "REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}" >> .env.dev
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env.dev
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env.dev
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env.dev

      - name: Build and run Docker Compose
        run: |
          docker compose -f docker-compose.yml up -d --build

      - name: Install Cypress dependencies
        run: npm install cypress --save-dev
        working-directory: ./frontend

      - name: Run backend tests
        run: docker compose run --rm backend sh -c "python manage.py wait_for_db && python manage.py test"

      - name: Run frontend Cypress tests
        run: npx cypress run
        working-directory: ./frontend

      - name: Shut down Docker Compose
        if: always()
        run: docker compose down
